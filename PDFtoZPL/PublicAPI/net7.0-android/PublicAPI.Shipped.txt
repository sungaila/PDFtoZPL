#nullable enable
PDFtoZPL.Conversion
static PDFtoZPL.Conversion.ConvertBitmap(byte[]! bitmapAsByteArray, PDFtoZPL.Conversion.BitmapEncodingKind encodingKind = PDFtoZPL.Conversion.BitmapEncodingKind.HexadecimalCompressed, bool graphicFieldOnly = false, bool setLabelLength = false) -> string!
static PDFtoZPL.Conversion.ConvertBitmap(string! bitmapPath, PDFtoZPL.Conversion.BitmapEncodingKind encodingKind = PDFtoZPL.Conversion.BitmapEncodingKind.HexadecimalCompressed, bool graphicFieldOnly = false, bool setLabelLength = false) -> string!
static PDFtoZPL.Conversion.ConvertBitmap(System.IO.Stream! bitmapAsStream, bool leaveOpen, PDFtoZPL.Conversion.BitmapEncodingKind encodingKind = PDFtoZPL.Conversion.BitmapEncodingKind.HexadecimalCompressed, bool graphicFieldOnly = false, bool setLabelLength = false) -> string!
static PDFtoZPL.Conversion.ConvertBitmap(System.IO.Stream! bitmapAsStream, PDFtoZPL.Conversion.BitmapEncodingKind encodingKind = PDFtoZPL.Conversion.BitmapEncodingKind.HexadecimalCompressed, bool graphicFieldOnly = false, bool setLabelLength = false) -> string!
static PDFtoZPL.Conversion.ConvertPdf(byte[]! pdfAsByteArray, string? password = null, int dpi = 203, int? width = null, int? height = null, bool withAnnotations = false, bool withFormFill = false, PDFtoZPL.Conversion.BitmapEncodingKind encodingKind = PDFtoZPL.Conversion.BitmapEncodingKind.HexadecimalCompressed, bool graphicFieldOnly = false, bool withAspectRatio = false, bool setLabelLength = false, PDFtoImage.PdfRotation rotation = PDFtoImage.PdfRotation.Rotate0) -> System.Collections.Generic.IEnumerable<string!>!
static PDFtoZPL.Conversion.ConvertPdf(string! pdfAsBase64String, string? password = null, int dpi = 203, int? width = null, int? height = null, bool withAnnotations = false, bool withFormFill = false, PDFtoZPL.Conversion.BitmapEncodingKind encodingKind = PDFtoZPL.Conversion.BitmapEncodingKind.HexadecimalCompressed, bool graphicFieldOnly = false, bool withAspectRatio = false, bool setLabelLength = false, PDFtoImage.PdfRotation rotation = PDFtoImage.PdfRotation.Rotate0) -> System.Collections.Generic.IEnumerable<string!>!
static PDFtoZPL.Conversion.ConvertPdf(System.IO.Stream! pdfStream, bool leaveOpen, string? password = null, int dpi = 203, int? width = null, int? height = null, bool withAnnotations = false, bool withFormFill = false, PDFtoZPL.Conversion.BitmapEncodingKind encodingKind = PDFtoZPL.Conversion.BitmapEncodingKind.HexadecimalCompressed, bool graphicFieldOnly = false, bool withAspectRatio = false, bool setLabelLength = false, PDFtoImage.PdfRotation rotation = PDFtoImage.PdfRotation.Rotate0) -> System.Collections.Generic.IEnumerable<string!>!
static PDFtoZPL.Conversion.ConvertPdf(System.IO.Stream! pdfStream, string? password = null, int dpi = 203, int? width = null, int? height = null, bool withAnnotations = false, bool withFormFill = false, PDFtoZPL.Conversion.BitmapEncodingKind encodingKind = PDFtoZPL.Conversion.BitmapEncodingKind.HexadecimalCompressed, bool graphicFieldOnly = false, bool withAspectRatio = false, bool setLabelLength = false, PDFtoImage.PdfRotation rotation = PDFtoImage.PdfRotation.Rotate0) -> System.Collections.Generic.IEnumerable<string!>!
static PDFtoZPL.Conversion.ConvertPdfAsync(byte[]! pdfAsByteArray, string? password = null, int dpi = 203, int? width = null, int? height = null, bool withAnnotations = false, bool withFormFill = false, PDFtoZPL.Conversion.BitmapEncodingKind encodingKind = PDFtoZPL.Conversion.BitmapEncodingKind.HexadecimalCompressed, bool graphicFieldOnly = false, bool withAspectRatio = false, bool setLabelLength = false, PDFtoImage.PdfRotation rotation = PDFtoImage.PdfRotation.Rotate0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Collections.Generic.IAsyncEnumerable<string!>!
static PDFtoZPL.Conversion.ConvertPdfAsync(string! pdfAsBase64String, string? password = null, int dpi = 203, int? width = null, int? height = null, bool withAnnotations = false, bool withFormFill = false, PDFtoZPL.Conversion.BitmapEncodingKind encodingKind = PDFtoZPL.Conversion.BitmapEncodingKind.HexadecimalCompressed, bool graphicFieldOnly = false, bool withAspectRatio = false, bool setLabelLength = false, PDFtoImage.PdfRotation rotation = PDFtoImage.PdfRotation.Rotate0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Collections.Generic.IAsyncEnumerable<string!>!
static PDFtoZPL.Conversion.ConvertPdfAsync(System.IO.Stream! pdfStream, bool leaveOpen, string? password = null, int dpi = 203, int? width = null, int? height = null, bool withAnnotations = false, bool withFormFill = false, PDFtoZPL.Conversion.BitmapEncodingKind encodingKind = PDFtoZPL.Conversion.BitmapEncodingKind.HexadecimalCompressed, bool graphicFieldOnly = false, bool withAspectRatio = false, bool setLabelLength = false, PDFtoImage.PdfRotation rotation = PDFtoImage.PdfRotation.Rotate0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Collections.Generic.IAsyncEnumerable<string!>!
static PDFtoZPL.Conversion.ConvertPdfAsync(System.IO.Stream! pdfStream, string? password = null, int dpi = 203, int? width = null, int? height = null, bool withAnnotations = false, bool withFormFill = false, PDFtoZPL.Conversion.BitmapEncodingKind encodingKind = PDFtoZPL.Conversion.BitmapEncodingKind.HexadecimalCompressed, bool graphicFieldOnly = false, bool withAspectRatio = false, bool setLabelLength = false, PDFtoImage.PdfRotation rotation = PDFtoImage.PdfRotation.Rotate0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Collections.Generic.IAsyncEnumerable<string!>!
static PDFtoZPL.Conversion.ConvertPdfPage(byte[]! pdfAsByteArray, string? password = null, int page = 0, int dpi = 203, int? width = null, int? height = null, bool withAnnotations = false, bool withFormFill = false, PDFtoZPL.Conversion.BitmapEncodingKind encodingKind = PDFtoZPL.Conversion.BitmapEncodingKind.HexadecimalCompressed, bool graphicFieldOnly = false, bool withAspectRatio = false, bool setLabelLength = false, PDFtoImage.PdfRotation rotation = PDFtoImage.PdfRotation.Rotate0) -> string!
static PDFtoZPL.Conversion.ConvertPdfPage(string! pdfAsBase64String, string? password = null, int page = 0, int dpi = 203, int? width = null, int? height = null, bool withAnnotations = false, bool withFormFill = false, PDFtoZPL.Conversion.BitmapEncodingKind encodingKind = PDFtoZPL.Conversion.BitmapEncodingKind.HexadecimalCompressed, bool graphicFieldOnly = false, bool withAspectRatio = false, bool setLabelLength = false, PDFtoImage.PdfRotation rotation = PDFtoImage.PdfRotation.Rotate0) -> string!
static PDFtoZPL.Conversion.ConvertPdfPage(System.IO.Stream! pdfStream, bool leaveOpen, string? password = null, int page = 0, int dpi = 203, int? width = null, int? height = null, bool withAnnotations = false, bool withFormFill = false, PDFtoZPL.Conversion.BitmapEncodingKind encodingKind = PDFtoZPL.Conversion.BitmapEncodingKind.HexadecimalCompressed, bool graphicFieldOnly = false, bool withAspectRatio = false, bool setLabelLength = false, PDFtoImage.PdfRotation rotation = PDFtoImage.PdfRotation.Rotate0) -> string!
static PDFtoZPL.Conversion.ConvertPdfPage(System.IO.Stream! pdfStream, string? password = null, int page = 0, int dpi = 203, int? width = null, int? height = null, bool withAnnotations = false, bool withFormFill = false, PDFtoZPL.Conversion.BitmapEncodingKind encodingKind = PDFtoZPL.Conversion.BitmapEncodingKind.HexadecimalCompressed, bool graphicFieldOnly = false, bool withAspectRatio = false, bool setLabelLength = false, PDFtoImage.PdfRotation rotation = PDFtoImage.PdfRotation.Rotate0) -> string!
PDFtoZPL.Conversion.BitmapEncodingKind
PDFtoZPL.Conversion.BitmapEncodingKind.Hexadecimal = 0 -> PDFtoZPL.Conversion.BitmapEncodingKind
PDFtoZPL.Conversion.BitmapEncodingKind.HexadecimalCompressed = 1 -> PDFtoZPL.Conversion.BitmapEncodingKind
PDFtoZPL.Conversion.BitmapEncodingKind.Base64 = 2 -> PDFtoZPL.Conversion.BitmapEncodingKind
PDFtoZPL.Conversion.BitmapEncodingKind.Base64Compressed = 3 -> PDFtoZPL.Conversion.BitmapEncodingKind