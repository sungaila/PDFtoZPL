<Project Sdk="MSBuild.Sdk.Extras/3.0.44">
  <!-- Assembly -->
  <PropertyGroup>
    <TargetFrameworks>net462;net6.0;net6.0-android;monoandroid10.0</TargetFrameworks>
    <AssemblyName>PDFtoZPL</AssemblyName>
    <RootNamespace>PDFtoZPL</RootNamespace>
    <EmbedAllSources>true</EmbedAllSources>
    <AssemblyOriginatorKeyFile>PDFtoZPL.snk</AssemblyOriginatorKeyFile>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <Configurations>Debug;Release;ReleaseSigned</Configurations>
  </PropertyGroup>

  <!-- NuGet -->
  <PropertyGroup>
    <VersionPrefix>3.2.3</VersionPrefix>
    <VersionSuffix></VersionSuffix>
    <Authors>David Sungaila</Authors>
    <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageIcon>Icon_128.png</PackageIcon>
    <PackageProjectUrl>https://github.com/sungaila/PDFtoZPL</PackageProjectUrl>
    <PackageIconUrl>https://raw.githubusercontent.com/sungaila/PDFtoZPL/master/Icon_128.png</PackageIconUrl>
    <Description>A .NET library to convert PDF files (and bitmaps) into Zebra Programming Language code.</Description>
    <PackageReleaseNotes>- Fixed native library loading for Android in .NET MAUI projects.</PackageReleaseNotes>
    <PackageTags>PDF ZPL Zebra Bitmap Convert Conversion C# PDFium MAUI</PackageTags>
    <RepositoryUrl>https://github.com/sungaila/PDFtoZPL.git</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <PackageReadmeFile>README.md</PackageReadmeFile>
  </PropertyGroup>

  <!-- C# compiler -->
  <PropertyGroup>
    <LangVersion>latest</LangVersion>
    <Nullable>enable</Nullable>
    <Features>strict</Features>
    <WarningsAsErrors>nullable</WarningsAsErrors>
  </PropertyGroup>

  <!-- Debug builds -->
  <PropertyGroup Condition="'$(Configuration)'=='Debug'">
    <VersionSuffix>debug</VersionSuffix>
  </PropertyGroup>

  <!-- Release builds -->
  <PropertyGroup Condition="'$(Configuration)'=='Release' or '$(Configuration)'=='ReleaseSigned'">
    <SignAssembly>true</SignAssembly>
    <Optimize>true</Optimize>
    <Deterministic>true</Deterministic>
    <ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>
  </PropertyGroup>

  <!-- Roslyn analyzer for public APIs -->
  <ItemGroup>
    <AdditionalFiles Include="PublicAPI/$(TargetFramework)/PublicAPI.Shipped.txt" />
    <AdditionalFiles Include="PublicAPI/$(TargetFramework)/PublicAPI.Unshipped.txt" />
  </ItemGroup>

  <!-- NuGet Icon -->
  <ItemGroup>
    <None Include="..\Icon_128.png" Pack="true" PackagePath="" />
    <None Include="..\README.md" Pack="true" PackagePath="" />
  </ItemGroup>

  <!-- SourceLink build steps and NuGet packages -->
  <ItemGroup>
    <PackageReference Include="PDFtoImage" Version="2.1.3" PrivateAssets="analyzers" />
    <PackageReference Include="Microsoft.CodeAnalysis.PublicApiAnalyzers" Version="3.3.4">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.1.1">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="SharpZipLib" Version="1.4.1" />
  </ItemGroup>

  <Import Project="PDFtoZPL.PropertiesSigning.targets" />
  <Import Project="PDFtoZPL.CodeSigning.targets" />
  <Import Project="PDFtoZPL.PackageSigning.targets" />
</Project>