<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PDFtoZPL</name>
    </assembly>
    <members>
        <member name="T:PDFtoZPL.BitmapEncodingKind">
            <summary>
            The supported encoding options for the bitmap within the generated ZPL code.
            </summary>
        </member>
        <member name="F:PDFtoZPL.BitmapEncodingKind.Hexadecimal">
            <summary>
            <b>Not recommended.</b> The bitmap is encoded as hexadecimals.<br/>
            Its output might be to large for the printer's bitmap storage area.
            </summary>
        </member>
        <member name="F:PDFtoZPL.BitmapEncodingKind.HexadecimalCompressed">
            <summary>
            The bitmap is encoded as hexadecimals and then compressed (via ZPL ASCII compression).<br/>
            It's significantly more space-saving than <see cref="F:PDFtoZPL.BitmapEncodingKind.Hexadecimal"/>.
            </summary>
        </member>
        <member name="F:PDFtoZPL.BitmapEncodingKind.Base64">
            <summary>
            <b>Not recommended.</b> The bitmap is encoded as Base64 (MIME). This encoding is referred to as <b>B64</b> in the ZPL II programming guide.<br/>
            Its output might be to large for the printer's bitmap storage area. Still more space-saving than <see cref="F:PDFtoZPL.BitmapEncodingKind.Hexadecimal"/> though.
            </summary>
        </member>
        <member name="F:PDFtoZPL.BitmapEncodingKind.Base64Compressed">
            <summary>
            Recommended. The bitmap is compressed with Deflate (RFC 1951) and then encoded as Base64 (MIME). This encoding is referred to as <b>Z64</b> in the ZPL II programming guide.
            </summary>
        </member>
        <member name="T:PDFtoZPL.Conversion">
            <summary>
            Provides methods to convert PDFs and <see cref="T:SkiaSharp.SKBitmap"/>s into ZPL code.
            </summary>
            <summary>
            Provides methods to convert PDFs and <see cref="T:SkiaSharp.SKBitmap"/>s into ZPL code.
            </summary>
        </member>
        <member name="M:PDFtoZPL.Conversion.ConvertPdf(System.String,System.String,PDFtoZPL.PdfOptions,PDFtoZPL.ZplOptions)">
            <summary>
            Converts all pages of a given PDF into ZPL code.
            </summary>
            <param name="pdfAsBase64String">The PDF encoded as Base64.</param>
            <param name="password">The password for opening the PDF. Use <see langword="null"/> if no password is needed.</param>
            <param name="pdfOptions">Additional options for PDF rendering.</param>
            <param name="zplOptions">Additional options for the ZPL output.</param>
            <returns>The converted PDF pages as ZPL code.</returns>
        </member>
        <member name="M:PDFtoZPL.Conversion.ConvertPdf(System.Byte[],System.String,PDFtoZPL.PdfOptions,PDFtoZPL.ZplOptions)">
            <summary>
            Converts all pages of a given PDF into ZPL code.
            </summary>
            <param name="pdfAsByteArray">The PDF as a byte array.</param>
            <param name="password">The password for opening the PDF. Use <see langword="null"/> if no password is needed.</param>
            <param name="pdfOptions">Additional options for PDF rendering.</param>
            <param name="zplOptions">Additional options for the ZPL output.</param>
            <returns>The converted PDF pages as ZPL code.</returns>
        </member>
        <member name="M:PDFtoZPL.Conversion.ConvertPdf(System.IO.Stream,System.Boolean,System.String,PDFtoZPL.PdfOptions,PDFtoZPL.ZplOptions)">
            <summary>
            Converts all pages of a given PDF into ZPL code.
            </summary>
            <param name="pdfStream">The PDF as a stream.</param>
            <param name="leaveOpen"><see langword="true"/> to leave the <paramref name="pdfStream"/> open after the PDF document is loaded; otherwise, <see langword="false"/>.</param>
            <param name="password">The password for opening the PDF. Use <see langword="null"/> if no password is needed.</param>
            <param name="pdfOptions">Additional options for PDF rendering.</param>
            <param name="zplOptions">Additional options for the ZPL output.</param>
            <returns>The converted PDF pages as ZPL code.</returns>
        </member>
        <member name="M:PDFtoZPL.Conversion.ConvertBitmap(System.String,PDFtoZPL.ZplOptions)">
            <summary>
            Converts a given image into ZPL code.
            </summary>
            <param name="bitmapPath">The file path of the image to convert.</param>
            <param name="zplOptions">Additional options for the ZPL output.</param>
            <returns>The converted <see cref="T:SkiaSharp.SKBitmap"/> as ZPL code.</returns>
        </member>
        <member name="M:PDFtoZPL.Conversion.ConvertBitmap(System.IO.Stream,System.Boolean,PDFtoZPL.ZplOptions)">
            <summary>
            Converts a given <see cref="T:SkiaSharp.SKBitmap"/> into ZPL code.
            </summary>
            <param name="bitmapAsStream">The <see cref="T:SkiaSharp.SKBitmap"/> to convert.</param>
            <param name="leaveOpen"><see langword="true"/> to leave the <paramref name="bitmapAsStream"/> open after the PDF document is loaded; otherwise, <see langword="false"/>.</param>
            <param name="zplOptions">Additional options for the ZPL output.</param>
            <returns>The converted <see cref="T:SkiaSharp.SKBitmap"/> as ZPL code.</returns>
        </member>
        <member name="M:PDFtoZPL.Conversion.ConvertBitmap(System.Byte[],PDFtoZPL.ZplOptions)">
            <summary>
            Converts a given image into ZPL code.
            </summary>
            <param name="bitmapAsByteArray">The image as byte array to convert.</param>
            <param name="zplOptions">Additional options for the ZPL output.</param>
            <returns>The converted <see cref="T:SkiaSharp.SKBitmap"/> as ZPL code.</returns>
        </member>
        <member name="M:PDFtoZPL.Conversion.ConvertBitmap(SkiaSharp.SKBitmap,PDFtoZPL.ZplOptions)">
            <summary>
            Converts a given <see cref="T:SkiaSharp.SKBitmap"/> into ZPL code.
            </summary>
            <param name="bitmap">The <see cref="T:SkiaSharp.SKBitmap"/> to convert.</param>
            <param name="zplOptions">Additional options for the ZPL output.</param>
            <returns>The converted <see cref="T:SkiaSharp.SKBitmap"/> as ZPL code.</returns>
        </member>
        <member name="M:PDFtoZPL.Conversion.ConvertPdfPage(System.String,System.String,System.Int32,PDFtoZPL.PdfOptions,PDFtoZPL.ZplOptions)">
            <summary>
            Converts a single page of a given PDF into ZPL code.
            </summary>
            <param name="pdfAsBase64String">The PDF encoded as Base64.</param>
            <param name="password">The password for opening the PDF. Use <see langword="null"/> if no password is needed.</param>
            <param name="page">The specific page to be converted.</param>
            <param name="pdfOptions">Additional options for PDF rendering.</param>
            <param name="zplOptions">Additional options for the ZPL output.</param>
            <returns>The converted PDF page as ZPL code.</returns>
        </member>
        <member name="M:PDFtoZPL.Conversion.ConvertPdfPage(System.Byte[],System.String,System.Int32,PDFtoZPL.PdfOptions,PDFtoZPL.ZplOptions)">
            <summary>
            Converts a single page of a given PDF into ZPL code.
            </summary>
            <param name="pdfAsByteArray">The PDF as a byte array.</param>
            <param name="password">The password for opening the PDF. Use <see langword="null"/> if no password is needed.</param>
            <param name="page">The specific page to be converted.</param>
            <param name="pdfOptions">Additional options for PDF rendering.</param>
            <param name="zplOptions">Additional options for the ZPL output.</param>
            <returns>The converted PDF page as ZPL code.</returns>
        </member>
        <member name="M:PDFtoZPL.Conversion.ConvertPdfPage(System.IO.Stream,System.Boolean,System.String,System.Int32,PDFtoZPL.PdfOptions,PDFtoZPL.ZplOptions)">
            <summary>
            Converts a single page of a given PDF into ZPL code.
            </summary>
            <param name="pdfStream">The PDF as a stream.</param>
            <param name="leaveOpen"><see langword="true"/> to leave the <paramref name="pdfStream"/> open after the PDF document is loaded; otherwise, <see langword="false"/>.</param>
            <param name="password">The password for opening the PDF. Use <see langword="null"/> if no password is needed.</param>
            <param name="page">The specific page to be converted.</param>
            <param name="pdfOptions">Additional options for PDF rendering.</param>
            <param name="zplOptions">Additional options for the ZPL output.</param>
            <returns>The converted PDF page as ZPL code.</returns>
        </member>
        <member name="F:PDFtoZPL.ConversionUtils.CompressionCountMapping">
            <summary>
            The mapping table used for compression.
            Each character count (the key) is represented by a certain char (the value).
            </summary>
        </member>
        <member name="T:PDFtoZPL.DitheringKind">
            <summary>
            The used dithering algorithem after downsampling to 1 bit monochrome.
            </summary>
        </member>
        <member name="F:PDFtoZPL.DitheringKind.None">
            <summary>
            No dithering.
            </summary>
        </member>
        <member name="F:PDFtoZPL.DitheringKind.FloydSteinberg">
            <summary>
            Use the Robert W. Floyd and Louis Steinberg dithering algorithm.
            </summary>
        </member>
        <member name="F:PDFtoZPL.DitheringKind.Atkinson">
            <summary>
            Use the Bill Atkinson dithering algorithm.
            </summary>
        </member>
        <member name="T:PDFtoZPL.IZplOptions">
            <summary>
            Contains all relevant information to render a PDF page into an image.
            </summary>
        </member>
        <member name="P:PDFtoZPL.IZplOptions.EncodingKind">
            <summary>
            The encoding used for embedding the bitmap.
            </summary>
        </member>
        <member name="P:PDFtoZPL.IZplOptions.GraphicFieldOnly">
            <summary>
            If <see langword="true"/> then only the ^GF part of the ZPL code is returned. Otherwise it returns ^XA^GF^FS^XZ.
            </summary>
        </member>
        <member name="P:PDFtoZPL.IZplOptions.SetLabelLength">
            <summary>
            If <see langword="true"/> then the returned ZPL sets the label length to the height of the image, using the ^LL command. Otherwise it returns ^XA^GF^FS^XZ.
            </summary>
        </member>
        <member name="P:PDFtoZPL.IZplOptions.Threshold">
            <summary>
            The threshold below which a pixel is considered black. Lower values mean darker, higher mean lighter.
            </summary>
        </member>
        <member name="P:PDFtoZPL.IZplOptions.DitheringKind">
            <summary>
            The dithering algorithm used when downsampling to a 1-bit monochrome image.
            </summary>
        </member>
        <member name="P:PDFtoZPL.IZplOptions.PrintQuantity">
            <summary>
            Adds the ^PQ command to set the total quantity of labels to print. Accepted values are 1 to 99,999,999. Ignored if set to 0.
            </summary>
        </member>
        <member name="T:PDFtoZPL.PdfOptions">
            <summary>
            Contains all relevant information to render a PDF page into an image.
            </summary>
            <param name="Dpi">The DPI scaling to use for rasterization of the PDF.</param>
            <param name="Width">The width of the desired page. Use <see langword="null"/> if the original width should be used.</param>
            <param name="Height">The height of the desired page. Use <see langword="null"/> if the original height should be used.</param>
            <param name="WithAnnotations">Specifies whether annotations be rendered.</param>
            <param name="WithFormFill">Specifies whether form filling will be rendered.</param>
            <param name="WithAspectRatio">Specifies that <paramref name="Width"/> or <paramref name="Height"/> should be adjusted for aspect ratio (either one must be <see langword="null"/>).</param>
            <param name="Rotation">Specifies the rotation at 90 degree intervals.</param>
            <param name="AntiAliasing">Specifies which parts of the PDF should be anti-aliasing for rendering.</param>
            <param name="BackgroundColor">Specifies the background color. Defaults to <see cref="F:SkiaSharp.SKColors.White"/>.</param>
            <param name="Bounds">Specifies the bounds for the page relative to <see cref="M:PDFtoImage.Conversion.GetPageSizes(System.String,System.String)"/>. This can be used for clipping (bounds inside of page) or additional margins (bounds outside of page). The bound units are relative to the PDF size (at 72 DPI).</param>
            <param name="UseTiling">Specifies that the PDF should be rendered as several segments and merged into the final image. This can help in cases where the output image is too large, causing corrupted images (e.g. missing text) or crashes.</param>
            <param name="DpiRelativeToBounds">Specifies that <see cref="P:PDFtoZPL.PdfOptions.Dpi"/> and <see cref="P:PDFtoZPL.PdfOptions.WithAspectRatio"/> will be calculated relative to <see cref="P:PDFtoZPL.PdfOptions.Bounds"/> instead of the original PDF.</param>
        </member>
        <member name="M:PDFtoZPL.PdfOptions.#ctor(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean,System.Boolean,System.Boolean,PDFtoImage.PdfRotation,PDFtoImage.PdfAntiAliasing,System.Nullable{SkiaSharp.SKColor},System.Nullable{System.Drawing.RectangleF},System.Boolean,System.Boolean)">
            <summary>
            Contains all relevant information to render a PDF page into an image.
            </summary>
            <param name="Dpi">The DPI scaling to use for rasterization of the PDF.</param>
            <param name="Width">The width of the desired page. Use <see langword="null"/> if the original width should be used.</param>
            <param name="Height">The height of the desired page. Use <see langword="null"/> if the original height should be used.</param>
            <param name="WithAnnotations">Specifies whether annotations be rendered.</param>
            <param name="WithFormFill">Specifies whether form filling will be rendered.</param>
            <param name="WithAspectRatio">Specifies that <paramref name="Width"/> or <paramref name="Height"/> should be adjusted for aspect ratio (either one must be <see langword="null"/>).</param>
            <param name="Rotation">Specifies the rotation at 90 degree intervals.</param>
            <param name="AntiAliasing">Specifies which parts of the PDF should be anti-aliasing for rendering.</param>
            <param name="BackgroundColor">Specifies the background color. Defaults to <see cref="F:SkiaSharp.SKColors.White"/>.</param>
            <param name="Bounds">Specifies the bounds for the page relative to <see cref="M:PDFtoImage.Conversion.GetPageSizes(System.String,System.String)"/>. This can be used for clipping (bounds inside of page) or additional margins (bounds outside of page). The bound units are relative to the PDF size (at 72 DPI).</param>
            <param name="UseTiling">Specifies that the PDF should be rendered as several segments and merged into the final image. This can help in cases where the output image is too large, causing corrupted images (e.g. missing text) or crashes.</param>
            <param name="DpiRelativeToBounds">Specifies that <see cref="P:PDFtoZPL.PdfOptions.Dpi"/> and <see cref="P:PDFtoZPL.PdfOptions.WithAspectRatio"/> will be calculated relative to <see cref="P:PDFtoZPL.PdfOptions.Bounds"/> instead of the original PDF.</param>
        </member>
        <member name="P:PDFtoZPL.PdfOptions.Dpi">
            <summary>The DPI scaling to use for rasterization of the PDF.</summary>
        </member>
        <member name="P:PDFtoZPL.PdfOptions.Width">
            <summary>The width of the desired page. Use <see langword="null"/> if the original width should be used.</summary>
        </member>
        <member name="P:PDFtoZPL.PdfOptions.Height">
            <summary>The height of the desired page. Use <see langword="null"/> if the original height should be used.</summary>
        </member>
        <member name="P:PDFtoZPL.PdfOptions.WithAnnotations">
            <summary>Specifies whether annotations be rendered.</summary>
        </member>
        <member name="P:PDFtoZPL.PdfOptions.WithFormFill">
            <summary>Specifies whether form filling will be rendered.</summary>
        </member>
        <member name="P:PDFtoZPL.PdfOptions.WithAspectRatio">
            <summary>Specifies that <paramref name="Width"/> or <paramref name="Height"/> should be adjusted for aspect ratio (either one must be <see langword="null"/>).</summary>
        </member>
        <member name="P:PDFtoZPL.PdfOptions.Rotation">
            <summary>Specifies the rotation at 90 degree intervals.</summary>
        </member>
        <member name="P:PDFtoZPL.PdfOptions.AntiAliasing">
            <summary>Specifies which parts of the PDF should be anti-aliasing for rendering.</summary>
        </member>
        <member name="P:PDFtoZPL.PdfOptions.BackgroundColor">
            <summary>Specifies the background color. Defaults to <see cref="F:SkiaSharp.SKColors.White"/>.</summary>
        </member>
        <member name="P:PDFtoZPL.PdfOptions.Bounds">
            <summary>Specifies the bounds for the page relative to <see cref="M:PDFtoImage.Conversion.GetPageSizes(System.String,System.String)"/>. This can be used for clipping (bounds inside of page) or additional margins (bounds outside of page). The bound units are relative to the PDF size (at 72 DPI).</summary>
        </member>
        <member name="P:PDFtoZPL.PdfOptions.UseTiling">
            <summary>Specifies that the PDF should be rendered as several segments and merged into the final image. This can help in cases where the output image is too large, causing corrupted images (e.g. missing text) or crashes.</summary>
        </member>
        <member name="P:PDFtoZPL.PdfOptions.DpiRelativeToBounds">
            <summary>Specifies that <see cref="P:PDFtoZPL.PdfOptions.Dpi"/> and <see cref="P:PDFtoZPL.PdfOptions.WithAspectRatio"/> will be calculated relative to <see cref="P:PDFtoZPL.PdfOptions.Bounds"/> instead of the original PDF.</summary>
        </member>
        <member name="M:PDFtoZPL.PdfOptions.#ctor">
            <summary>
            Constructs <see cref="T:PDFtoZPL.PdfOptions"/> with default values.
            </summary>
        </member>
        <member name="M:PDFtoZPL.PdfOptions.op_Implicit(PDFtoZPL.PdfOptions)~PDFtoImage.RenderOptions">
            <summary>
            Implicit conversion to <see cref="T:PDFtoImage.RenderOptions"/>.
            </summary>
            <param name="pdfOptions">The options to convert.</param>
        </member>
        <member name="T:PDFtoZPL.ZplOptions">
            <summary>
            Contains all relevant information to render a PDF page into an image.
            </summary>
            <param name="EncodingKind">The encoding used for embedding the bitmap.</param>
            <param name="GraphicFieldOnly">If <see langword="true"/> then only the ^GF part of the ZPL code is returned. Otherwise it returns ^XA^GF^FS^XZ.</param>
            <param name="SetLabelLength">If <see langword="true"/> then the returned ZPL sets the label length to the height of the image, using the ^LL command. Otherwise it returns ^XA^GF^FS^XZ.</param>
            <param name="Threshold">The threshold below which a pixel is considered black. Lower values mean darker, higher mean lighter.</param>
            <param name="DitheringKind">The dithering algorithm used when downsampling to a 1-bit monochrome image.</param>
            <param name="PrintQuantity">Adds the ^PQ command to set the total quantity of labels to print. Accepted values are 1 to 99,999,999. Ignored if set to 0.</param>
        </member>
        <member name="M:PDFtoZPL.ZplOptions.#ctor(PDFtoZPL.BitmapEncodingKind,System.Boolean,System.Boolean,System.Byte,PDFtoZPL.DitheringKind,System.UInt32)">
            <summary>
            Contains all relevant information to render a PDF page into an image.
            </summary>
            <param name="EncodingKind">The encoding used for embedding the bitmap.</param>
            <param name="GraphicFieldOnly">If <see langword="true"/> then only the ^GF part of the ZPL code is returned. Otherwise it returns ^XA^GF^FS^XZ.</param>
            <param name="SetLabelLength">If <see langword="true"/> then the returned ZPL sets the label length to the height of the image, using the ^LL command. Otherwise it returns ^XA^GF^FS^XZ.</param>
            <param name="Threshold">The threshold below which a pixel is considered black. Lower values mean darker, higher mean lighter.</param>
            <param name="DitheringKind">The dithering algorithm used when downsampling to a 1-bit monochrome image.</param>
            <param name="PrintQuantity">Adds the ^PQ command to set the total quantity of labels to print. Accepted values are 1 to 99,999,999. Ignored if set to 0.</param>
        </member>
        <member name="P:PDFtoZPL.ZplOptions.EncodingKind">
            <summary>The encoding used for embedding the bitmap.</summary>
        </member>
        <member name="P:PDFtoZPL.ZplOptions.GraphicFieldOnly">
            <summary>If <see langword="true"/> then only the ^GF part of the ZPL code is returned. Otherwise it returns ^XA^GF^FS^XZ.</summary>
        </member>
        <member name="P:PDFtoZPL.ZplOptions.SetLabelLength">
            <summary>If <see langword="true"/> then the returned ZPL sets the label length to the height of the image, using the ^LL command. Otherwise it returns ^XA^GF^FS^XZ.</summary>
        </member>
        <member name="P:PDFtoZPL.ZplOptions.Threshold">
            <summary>The threshold below which a pixel is considered black. Lower values mean darker, higher mean lighter.</summary>
        </member>
        <member name="P:PDFtoZPL.ZplOptions.DitheringKind">
            <summary>The dithering algorithm used when downsampling to a 1-bit monochrome image.</summary>
        </member>
        <member name="P:PDFtoZPL.ZplOptions.PrintQuantity">
            <summary>Adds the ^PQ command to set the total quantity of labels to print. Accepted values are 1 to 99,999,999. Ignored if set to 0.</summary>
        </member>
        <member name="M:PDFtoZPL.ZplOptions.#ctor">
            <summary>
            Constructs <see cref="T:PDFtoZPL.ZplOptions"/> with default values.
            </summary>
        </member>
    </members>
</doc>
